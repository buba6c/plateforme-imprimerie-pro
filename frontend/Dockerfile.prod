# Build stage pour React
FROM node:20-alpine as build

# Arguments de build
ARG REACT_APP_API_URL
ARG REACT_APP_SOCKET_URL

# Variables d'environnement pour le build
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_SOCKET_URL=$REACT_APP_SOCKET_URL
# Garder NODE_ENV=production pour le build, mais forcer l'installation des devDeps
ENV NODE_ENV=production
ENV NPM_CONFIG_PRODUCTION=false
# Ignorer les erreurs ESLint pour le build
ENV DISABLE_ESLINT_PLUGIN=true
ENV GENERATE_SOURCEMAP=false

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers de configuration
COPY package*.json ./
COPY tailwind.config.js ./
COPY postcss.config.js ./

# Installer les dépendances (inclure devDeps nécessaires au build)
RUN npm ci

# Copier le code source
COPY public/ ./public/
COPY src/ ./src/

# Build de production
RUN npm run build

# Stage final - Image légère pour servir les fichiers statiques
FROM nginx:alpine

# Copier les fichiers buildés
COPY --from=build /app/build /app/build

# Configuration nginx avec proxy vers le backend
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name localhost;
    root /app/build;
    index index.html index.htm;
    
    location / {
        try_files \$uri \$uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, immutable";
    }
    
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location /api/ {
        proxy_pass http://backend:5001/api/;
        proxy_http_version 1.1;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    location /socket.io/ {
        proxy_pass http://backend:5001/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host \$host;
    }
    
    location /health {
        access_log off;
        return 200 "healthy\\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Exposer le port
EXPOSE 80

# Commande de démarrage
CMD ["nginx", "-g", "daemon off;"]