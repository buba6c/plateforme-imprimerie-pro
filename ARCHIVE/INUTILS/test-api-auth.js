const axios = require('axios');

// Configuration de test
const BASE_URL = 'http://localhost:3001';

// Fonction de test d'authentification
async function testAuthentication() {
    console.log('üîç Test d\'authentification API...\n');
    
    try {
        // Test 1: Login admin
        console.log('1. Test login admin...');
        const loginResponse = await axios.post(`${BASE_URL}/api/auth/login`, {
            email: 'admin@imprimerie.local',
            password: 'admin123'
        });
        
        console.log('‚úÖ Login r√©ussi');
        const token = loginResponse.data.token;
        console.log('üîë Token re√ßu:', token.substring(0, 20) + '...\n');
        
        // Test 2: R√©cup√©rer les dossiers avec auth
        console.log('2. Test r√©cup√©ration dossiers avec authentification...');
        const dossiersResponse = await axios.get(`${BASE_URL}/api/dossiers`, {
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });
        
        console.log('‚úÖ Dossiers r√©cup√©r√©s avec succ√®s');
        console.log('üìä Nombre de dossiers:', dossiersResponse.data.length);
        
        if (dossiersResponse.data.length > 0) {
            const firstDossier = dossiersResponse.data[0];
            console.log('üìÑ Premier dossier:', {
                id: firstDossier.id,
                nom: firstDossier.nom,
                statut: firstDossier.statut,
                client: firstDossier.client
            });
            
            // Test 3: R√©cup√©rer les d√©tails d'un dossier sp√©cifique
            console.log('\n3. Test r√©cup√©ration d√©tails dossier...');
            const dossierDetailResponse = await axios.get(`${BASE_URL}/api/dossiers/${firstDossier.id}`, {
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });
            
            console.log('‚úÖ D√©tails dossier r√©cup√©r√©s avec succ√®s');
            console.log('üìã D√©tails:', {
                id: dossierDetailResponse.data.id,
                nom: dossierDetailResponse.data.nom,
                statut: dossierDetailResponse.data.statut,
                nb_fichiers: dossierDetailResponse.data.fichiers ? dossierDetailResponse.data.fichiers.length : 0
            });
            
            // Test 4: R√©cup√©rer les fichiers du dossier
            if (dossierDetailResponse.data.fichiers && dossierDetailResponse.data.fichiers.length > 0) {
                console.log('\n4. Test r√©cup√©ration fichiers...');
                const filesResponse = await axios.get(`${BASE_URL}/api/files/dossier/${firstDossier.id}`, {
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });
                
                console.log('‚úÖ Fichiers r√©cup√©r√©s avec succ√®s');
                console.log('üìÅ Nombre de fichiers:', filesResponse.data.length);
                
                if (filesResponse.data.length > 0) {
                    const firstFile = filesResponse.data[0];
                    console.log('üìÑ Premier fichier:', {
                        id: firstFile.id,
                        nom: firstFile.nom_fichier,
                        type: firstFile.type_mime,
                        taille: firstFile.taille
                    });
                }
            }
        }
        
        console.log('\n‚úÖ TOUS LES TESTS PASS√âS - L\'authentification fonctionne correctement');
        
    } catch (error) {
        console.error('\n‚ùå ERREUR DE TEST:', {
            message: error.message,
            status: error.response?.status,
            statusText: error.response?.statusText,
            data: error.response?.data
        });
        
        if (error.response?.status === 401) {
            console.log('\nüö® PROBL√àME D\'AUTHENTIFICATION D√âTECT√â');
            console.log('- V√©rifiez les credentials dans la base de donn√©es');
            console.log('- V√©rifiez la configuration JWT dans le backend');
        } else if (error.response?.status === 404) {
            console.log('\nüö® ENDPOINT NON TROUV√â');
            console.log('- V√©rifiez que le backend est d√©marr√© sur le port 3001');
            console.log('- V√©rifiez les routes dans server.js');
        }
    }
}

// Test sans authentification pour comparaison
async function testWithoutAuth() {
    console.log('\nüîç Test sans authentification (doit √©chouer)...\n');
    
    try {
        const response = await axios.get(`${BASE_URL}/api/dossiers`);
        console.log('‚ö†Ô∏è  Attention: Acc√®s autoris√© sans authentification!');
    } catch (error) {
        if (error.response?.status === 401) {
            console.log('‚úÖ S√©curit√© OK: Acc√®s refus√© sans authentification (401)');
        } else {
            console.log('‚ùå Erreur inattendue:', error.response?.status, error.response?.statusText);
        }
    }
}

// Ex√©cution des tests
async function runAllTests() {
    console.log('üöÄ D√âBUT DES TESTS API - AUTHENTIFICATION\n');
    console.log('='.repeat(50));
    
    await testAuthentication();
    await testWithoutAuth();
    
    console.log('\n' + '='.repeat(50));
    console.log('üèÅ FIN DES TESTS');
}

runAllTests().catch(console.error);