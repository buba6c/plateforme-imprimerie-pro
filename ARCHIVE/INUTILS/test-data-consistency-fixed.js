#!/usr/bin/env node

/**
 * Test de coh√©rence des donn√©es entre l'API r√©elle et les donn√©es mock
 * V√©rifie que les dossiers affich√©s sont identiques pour tous les r√¥les
 */

const axios = require('axios');

const BASE_URL = 'http://localhost:5001/api';

async function testDataConsistency() {
    console.log('üß™ Test de coh√©rence des donn√©es');
    console.log('================================\n');

    try {
        let adminDossiers = null;
        let prepDossiers = null;
        
        // Test 1: Connexion admin
        console.log('1Ô∏è‚É£ Test connexion Admin...');
        const adminLogin = await axios.post(`${BASE_URL}/auth/login`, {
            email: 'admin@imprimerie.local',
            password: 'admin123'
        });
        
        if (adminLogin.data.token) {
            console.log('‚úÖ Admin connect√©');
            
            // R√©cup√©rer les dossiers pour l'admin
            adminDossiers = await axios.get(`${BASE_URL}/dossiers`, {
                headers: { Authorization: `Bearer ${adminLogin.data.token}` }
            });
            
            console.log(`üìä Admin voit ${adminDossiers.data.dossiers.length} dossiers:`);
            adminDossiers.data.dossiers.forEach(d => {
                console.log(`   - ${d.numero_commande} (${d.type}, ${d.status})`);
            });
        } else {
            console.log('‚ùå Connexion admin √©chou√©e:', adminLogin.data);
        }
        
        console.log('\n2Ô∏è‚É£ Test connexion Pr√©parateur...');
        // Test 2: Connexion pr√©parateur  
        const prepLogin = await axios.post(`${BASE_URL}/auth/login`, {
            email: 'preparateur@imprimerie.local', 
            password: 'admin123'
        });
        
        if (prepLogin.data.token) {
            console.log('‚úÖ Pr√©parateur connect√©');
            
            // R√©cup√©rer les dossiers pour le pr√©parateur
            prepDossiers = await axios.get(`${BASE_URL}/dossiers`, {
                headers: { Authorization: `Bearer ${prepLogin.data.token}` }
            });
            
            console.log(`üìä Pr√©parateur voit ${prepDossiers.data.dossiers.length} dossiers:`);
            prepDossiers.data.dossiers.forEach(d => {
                console.log(`   - ${d.numero_commande} (${d.type}, ${d.status})`);
            });
        } else {
            console.log('‚ùå Connexion pr√©parateur √©chou√©e:', prepLogin.data);
        }

        console.log('\nüîç Comparaison des r√©sultats...');
        // Comparaison entre admin et pr√©parateur
        if (adminDossiers && prepDossiers) {
            const adminDossierIds = adminDossiers.data.dossiers.map(d => d.numero_commande).sort();
            const prepDossierIds = prepDossiers.data.dossiers.map(d => d.numero_commande).sort();
            
            const identical = JSON.stringify(adminDossierIds) === JSON.stringify(prepDossierIds);
            
            console.log(`üîÑ Coh√©rence des donn√©es: ${identical ? '‚úÖ IDENTIQUES' : '‚ùå DIFF√âRENTES'}`);
            
            if (!identical) {
                console.log('‚ùó Admin uniquement:', adminDossierIds.filter(x => !prepDossierIds.includes(x)));
                console.log('‚ùó Pr√©parateur uniquement:', prepDossierIds.filter(x => !adminDossierIds.includes(x)));
            }
        } else {
            console.log('‚ö†Ô∏è Impossible de comparer - donn√©es manquantes');
        }
        
        console.log('\n‚úÖ Test de coh√©rence termin√© !');
        
    } catch (error) {
        console.log('‚ùå Erreur pendant le test:', error.message);
        if (error.response) {
            console.log('Response:', error.response.data);
        }
    }
}

// Lancement du test
testDataConsistency();