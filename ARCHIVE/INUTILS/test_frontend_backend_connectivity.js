#!/usr/bin/env node
/**
 * Diagnostic connectivit√© Frontend -> Backend
 */

const axios = require('axios');

async function testConnectivite() {
  console.log('üîç Test de connectivit√© Frontend -> Backend...\n');
  
  const tests = [
    { name: 'Health Check', url: 'http://localhost:5001/api/health' },
    { name: 'API Base', url: 'http://localhost:5001/api' },
    { name: 'Workflow Meta', url: 'http://localhost:5001/api/workflow/meta' },
    { name: 'Dossiers (sans auth)', url: 'http://localhost:5001/api/dossiers' },
  ];
  
  for (const test of tests) {
    try {
      console.log(`üì° Test: ${test.name}`);
      
      const response = await axios.get(test.url, { 
        timeout: 5000,
        validateStatus: () => true // Accepter tous les codes de statut
      });
      
      console.log(`   ‚úÖ Status: ${response.status}`);
      
      if (response.status === 200) {
        const data = typeof response.data === 'object' 
          ? JSON.stringify(response.data).substring(0, 100) + '...'
          : response.data.substring(0, 100) + '...';
        console.log(`   üìÑ Data: ${data}`);
      } else if (response.status === 401) {
        console.log(`   üîí Authentification requise (normal)`);
      } else {
        console.log(`   ‚ö†Ô∏è  R√©ponse: ${response.data?.message || response.statusText}`);
      }
      
    } catch (error) {
      console.log(`   ‚ùå Erreur: ${error.message}`);
      
      if (error.code === 'ECONNREFUSED') {
        console.log('   üîå Backend non accessible - v√©rifier si le serveur est d√©marr√©');
      } else if (error.code === 'ETIMEDOUT') {
        console.log('   ‚è±Ô∏è  Timeout - backend lent ou bloqu√©');
      }
    }
    
    console.log('');
  }
  
  // Test depuis le frontend
  console.log('üåê Test depuis le frontend (port 3001)...');
  
  try {
    const frontendResponse = await axios.get('http://localhost:3001', {
      timeout: 3000
    });
    
    console.log(`‚úÖ Frontend accessible: ${frontendResponse.status}`);
    
    if (frontendResponse.data.includes('id="root"')) {
      console.log('‚úÖ React app structure d√©tect√©e');
    }
    
  } catch (error) {
    console.log(`‚ùå Frontend inaccessible: ${error.message}`);
  }
  
  console.log('\nüìã R√©sum√© du diagnostic:');
  console.log('- Backend: port 5001');
  console.log('- Frontend: port 3001'); 
  console.log('- Configuration API: REACT_APP_API_URL=http://localhost:5001/api');
  console.log('- Configuration Socket: REACT_APP_SOCKET_URL=http://localhost:5001');
}

if (require.main === module) {
  testConnectivite().catch(console.error);
}

module.exports = { testConnectivite };