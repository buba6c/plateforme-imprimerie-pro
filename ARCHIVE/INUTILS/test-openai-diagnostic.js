/**
 * Script de diagnostic pour OpenAI
 */

const path = require('path');

console.log('=== DIAGNOSTIC OPENAI ===\n');

// Test 1: V√©rification des modules
console.log('1. V√©rification des modules...');
try {
  const dbHelper = require('./backend/utils/dbHelper');
  console.log('‚úÖ dbHelper import√©');
  
  const openaiService = require('./backend/services/openaiService');
  console.log('‚úÖ openaiService import√©');
  
  // Test 2: Configuration base de donn√©es
  console.log('\n2. Test de la configuration OpenAI...');
  
  (async () => {
    try {
      // R√©cup√©rer la config OpenAI
      const config = await openaiService.getOpenAIConfig();
      
      if (!config) {
        console.log('‚ùå Aucune configuration OpenAI trouv√©e');
        console.log('üìã Actions requises:');
        console.log('   1. Aller dans l\'interface admin');
        console.log('   2. Configurer une cl√© API OpenAI');
        console.log('   3. Activer l\'IA');
        return;
      }
      
      console.log('‚úÖ Configuration OpenAI trouv√©e:');
      console.log(`   - Actif: ${config.is_active ? '‚úÖ' : '‚ùå'}`);
      console.log(`   - Cl√© API: ${config.api_key_encrypted ? '‚úÖ Configur√©e' : '‚ùå Manquante'}`);
      console.log(`   - Base de connaissance: ${config.knowledge_base_text ? config.knowledge_base_text.length + ' caract√®res' : '‚ùå Vide'}`);
      console.log(`   - Requ√™tes totales: ${config.total_requests || 0}`);
      
      if (!config.is_active) {
        console.log('\n‚ö†Ô∏è  OpenAI est D√âSACTIV√â');
        console.log('üìã Pour activer:');
        console.log('   1. Interface Admin > Param√®tres OpenAI');
        console.log('   2. Cocher "Activer l\'IA"');
        console.log('   3. Sauvegarder');
        return;
      }
      
      if (!config.api_key_encrypted) {
        console.log('\n‚ùå Cl√© API manquante');
        console.log('üìã Pour configurer:');
        console.log('   1. Obtenir une cl√© API sur platform.openai.com');
        console.log('   2. Interface Admin > Param√®tres OpenAI');
        console.log('   3. Saisir la cl√© API');
        console.log('   4. Tester la connexion');
        console.log('   5. Sauvegarder');
        return;
      }
      
      console.log('\n3. Test d\'estimation...');
      
      // Test avec donn√©es fictives
      const testData = {
        type_support: 'B√¢che',
        largeur: '200',
        hauteur: '100', 
        unite: 'cm',
        nombre_exemplaires: '1'
      };
      
      // R√©cup√©rer les tarifs
      const [tarifs] = await dbHelper.query('SELECT * FROM tarifs_config WHERE actif = TRUE AND type_machine = $1', ['roland']);
      console.log(`‚úÖ ${tarifs.length} tarifs trouv√©s pour Roland`);
      
      // Faire l'estimation
      const estimation = await openaiService.estimateQuote(testData, 'roland', tarifs, config.knowledge_base_text);
      
      console.log('üéâ Test d\'estimation r√©ussi!');
      console.log(`   - Prix estim√©: ${estimation.prix_estime} FCFA`);
      console.log(`   - IA utilis√©e: ${estimation.ia_used ? 'OUI' : 'NON (fallback manuel)'}`);
      console.log(`   - Mod√®le: ${estimation.model || 'Non sp√©cifi√©'}`);
      
      if (estimation.explanation) {
        console.log(`   - Explication: ${estimation.explanation.substring(0, 150)}...`);
      }
      
      if (!estimation.ia_used) {
        console.log('\n‚ö†Ô∏è  L\'estimation utilise le fallback manuel');
        console.log('üîç Causes possibles:');
        console.log('   - Cl√© API invalide');
        console.log('   - Probl√®me de r√©seau');
        console.log('   - Quota OpenAI d√©pass√©');
        console.log('   - Service OpenAI indisponible');
      }
      
    } catch (error) {
      console.error('‚ùå Erreur lors du diagnostic:', error.message);
      
      if (error.code === 'invalid_api_key') {
        console.log('\nüîë Probl√®me de cl√© API:');
        console.log('   - La cl√© API OpenAI est invalide ou expir√©e');
        console.log('   - V√©rifiez votre cl√© sur platform.openai.com');
      } else if (error.code === 'insufficient_quota') {
        console.log('\nüí∞ Probl√®me de quota:');
        console.log('   - Votre quota OpenAI est √©puis√©');
        console.log('   - Ajoutez des cr√©dits sur votre compte OpenAI');
      } else {
        console.log('\nüîç Erreur technique d√©taill√©e:');
        console.log(error);
      }
    }
    
    process.exit(0);
  })();
  
} catch (error) {
  console.error('‚ùå Erreur lors de l\'importation:', error.message);
  process.exit(1);
}