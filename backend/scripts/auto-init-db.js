#!/usr/bin/env node
/**
 * Script d'initialisation automatique pour Render
 * V√©rifie si les tables existent et les cr√©e si n√©cessaire
 */

const fs = require('fs');
const path = require('path');

async function autoInitDatabase() {
  // Ne s'ex√©cute qu'en production avec DATABASE_URL
  if (process.env.NODE_ENV !== 'production' || !process.env.DATABASE_URL) {
    console.log('üìã Auto-init ignor√© (dev mode ou pas de DATABASE_URL)');
    return;
  }

  try {
    const { query } = require('../config/database');
    
    console.log('üîç V√©rification tables PostgreSQL...');
    
    // V√©rifier si la table users existe
    const tablesResult = await query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' AND table_name = 'users'
    `);

    if (tablesResult.rows.length === 0) {
      console.log('üöÄ Tables manquantes - Initialisation automatique...');
      
      // Lire et ex√©cuter le script d'initialisation
      const initSqlPath = path.join(__dirname, '..', 'database', 'init.sql');
      const initSql = fs.readFileSync(initSqlPath, 'utf8');
      
      await query(initSql);
      
      console.log('‚úÖ Base de donn√©es initialis√©e automatiquement !');
      console.log('üë• Utilisateurs cr√©√©s avec mot de passe: admin123');
    } else {
      console.log('‚úÖ Tables d√©j√† pr√©sentes');
    }

  } catch (error) {
    console.error('‚ùå Erreur auto-init DB:', error.message);
    // Ne pas faire √©chouer le d√©ploiement
  }
}

// Auto-ex√©cution si appel√© directement
if (require.main === module) {
  autoInitDatabase();
}

module.exports = { autoInitDatabase };